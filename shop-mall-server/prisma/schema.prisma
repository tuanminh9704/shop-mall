// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Product {
  id          Int              @id @default(autoincrement())
  name        String
  description String?
  price       String?
  category    Category         @relation(fields: [categoryId], references: [id])
  categoryId  Int

  brand       Brand?           @relation(fields: [brandId], references: [id])
  brandId     Int?

  images      ProductImage[]
  promotions  ProductPromotion[]
  productOption ProductOption[]
  productVariant  ProductVariant[]

  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  icon      String     @default("") 
  hasChildrens Boolean @default(false)
  slug      String     @default("") 

  parentId  Int?
  parent    Category?  @relation("CategoryParent", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryParent")

  products  Product[]
  banners   Banner[]
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  imageUrl   String
  isMain     Boolean  @default(false)
  order      Int?

  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
}


model ProductPromotion {
  id          Int          @id @default(autoincrement())
  product     Product      @relation(fields: [productId], references: [id])
  productId   Int

  type        PromotionType
  promoPrice  Float
  startAt     DateTime
  endAt       DateTime
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String
  title     String
  logoUrl   String?  
  isFeatured Boolean  @default(false)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products  Product[] 
}

model Banner {
  id          Int       @id @default(autoincrement())
  title       String
  imageUrl    String
  type        BannerType
  categoryId  Int?      
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  displayOrder Int      @default(0)
  isActive     Boolean  @default(true)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ProductOption {
  id        Int       @id @default(autoincrement())
  product   Product   @relation(fields: [productId], references: [id])
  productId Int
  name      String
  position  Int

  values    ProductOptionValue[]
}

model ProductOptionValue {
  id           Int           @id @default(autoincrement())
  option       ProductOption @relation(fields: [productOptionId], references: [id])
  productOptionId Int
  value        String   
  position     Int?

  variantOpriionValue VariantOptionValue[]
}


model ProductVariant {
  id           Int           @id @default(autoincrement())
  sku       String
  imageUrl  String 
  stock     Int 

  product     Product          @relation(fields: [productId], references: [id])
  productId   Int

  variantOptionValue VariantOptionValue[]
  VariantInventory   VariantInventory[] 

}
model VariantOptionValue {
  id                 Int                @id @default(autoincrement())
  variant            ProductVariant     @relation(fields: [variantId], references: [id])
  variantId          Int
  optionValue        ProductOptionValue @relation(fields: [optionValueId], references: [id])
  optionValueId      Int
}

model Warehouses {
  id                  Int                @id @default(autoincrement())
  name                String
  address             String
  city                String
  province            String
  country             String
  createdAt           DateTime
  updatedAt           DateTime
  
  variantInventory  VariantInventory[] 
}

model VariantInventory {
  id                  Int                @id @default(autoincrement())

  variantId           Int
  variant            ProductVariant     @relation(fields: [variantId], references: [id])

  warehouseId       Int
  warehouse         Warehouses          @relation(fields: [warehouseId], references: [id])

  stockQuantity     Int
  updatedAt         DateTime
}

enum BannerType {
  HOMEPAGE
  CATEGORY
  PROMOTION
}

enum PromotionType {
  FLASH_SALE
  TOP_DEAL
  NORMAL
}